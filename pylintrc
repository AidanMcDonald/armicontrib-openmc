[MESSAGES CONTROL]

# ** Reasons disabled **
# default
disable =

[BASIC]
dummy-variables-rgx=_[a-zA-Z_]*
# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=^_|^test_
docstring-min-length=5

# Regular expression which should only match correct module names
module-rgx=^((test|ip|at|ec)_)?[a-z][a-zA-Z0-9]*$

# Regular expression which should only match correct module level names
const-rgx=^(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=^[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
function-rgx=^[a-z_][a-zA-Z0-9_]{2,}$

# Regular expression which should only match correct method names
method-rgx=^[a-z_][a-zA-Z0-9_]{2,}$

# Regular expression which should only match correct instance attribute names
attr-rgx=^([ora]|[a-z_][a-zA-Z0-9_]{1,30})$

# Regular expression which should only match correct argument names
argument-rgx=^([ora]|[a-z_][a-zA-Z0-9_]{1,30})$

# Regular expression which should only match correct variable names
variable-rgx=^([ora]|[a-z_][a-zA-Z0-9_]{1,30})$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=^[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=o,r,g,a,_,b,c,f,i,j,k,x,y,z,s,t,n,m,p,N,D,G

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# List of builtins function names that should not be used, separated by a comma
bad-functions=apply,input,super

[FORMAT]
# Maximum number of characters on a single line.
max-line-length=120

[MASTER]
init-hook="import pylint_bootstrap,sys; pylint_bootstrap.construct_path()"
unsafe-load-any-extensions=yes
load-plugins=pylint.extensions.docparams,pylint.extensions.docstyle
extension-pkg-whitelist=numpy,pylab,pyodbc,mpi4py.MPI,matplotlib.cm.jet,pyodbc,scipy,wx

[TYPECHECK]
ignored-modules = numpy,mpi4py.MPI
ignored-classes = argparse.Namespace

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX
